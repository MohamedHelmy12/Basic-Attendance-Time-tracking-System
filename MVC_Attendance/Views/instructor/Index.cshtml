@model IEnumerable<MVC_Attendance.Models.Instructor>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h2 class="text-center">Instructor Data</h2>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-12 mb-3">
                            <a asp-action="Create" class="btn btn-info">Add Instructor</a>
                        </div>
                        <div class="col-12 mb-3">
                            <input type="text" id="searchInput" class="form-control" placeholder="Search by email...">
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped">
                            <thead class="thead-dark">
                                <tr>
                                    <th>First Name</th>
                                    <th>Last Name</th>
                                    <th>Email</th>
                                    <th>Password</th>
                                    <th>Phone</th>
                                    <th>Address</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="searchResults">
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                                        <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Email)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Password)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Address)</td>
                                        <td>
                                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edit</a>
                                            <button type="button" onclick="confirmDelete('@item.Id')" class="btn btn-danger">Delete</button>
                                        </td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="text-center" id="paginationContainer">
                        <!-- Pagination buttons will be inserted here -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var table = $("#searchResults");
        var rows = table.find("tr").length;
        var rowsPerPage = 3;
        var totalPages = Math.ceil(rows / rowsPerPage);

        showPage(1);

        function showPage(page) {
            var start = (page - 1) * rowsPerPage;
            var end = start + rowsPerPage;
            table.find("tr").hide().slice(start, end).show();
            generatePagination(page);
        }

        function generatePagination(currentPage) {
            var paginationHtml = '<nav aria-label="Page navigation"><ul class="pagination">';
            for (var i = 1; i <= totalPages; i++) {
                var activeClass = (i === currentPage) ? "active" : "";
                paginationHtml += '<li class="page-item ' + activeClass + '"><a class="page-link" href="#" data-page="' + i + '">' + i + '</a></li>';
            }
            paginationHtml += '</ul></nav>';
            $("#paginationContainer").html(paginationHtml);
        }

        $("#paginationContainer").on("click", "a.page-link", function (e) {
            e.preventDefault();
            var page = $(this).data("page");
            showPage(page);
        });

        $("#searchInput").keyup(function () {
            var searchText = $(this).val().toLowerCase();
            table.find("tr").filter(function () {
                return $(this).find("td:nth-child(3)").text().toLowerCase().indexOf(searchText) > -1;
            }).toggle();
            // Recalculate pagination based on filtered rows
            rows = table.find("tr:visible").length - 1; // Subtract 1 for the header row
            totalPages = Math.ceil(rows / rowsPerPage);
            showPage(1);
        });
    });

    function confirmDelete(instructorId) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'You won\'t be able to revert this!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                // If user confirms deletion, redirect to delete action
                window.location.href = 'index';
            }
        });
    }
</script>


